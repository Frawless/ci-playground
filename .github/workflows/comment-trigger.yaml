name: System Tests

on:
  # Trigger for manual execution from GitHub UI
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Release version to test (i.e. 'latest', '0.46.0')"
        required: false
        default: "latest"
      kafkaVersion:
        description: "Kafka version. e.g. '4.0.0' or 'latest'"
        required: false
        default: "latest"
      profile:
        description: "Comma-separated or single profile name(s)"
        required: false
        default: ""
        type: string
  # Automated trigger for issue comment
  issue_comment:
    types: [created]
  # pull_request:

jobs:
  check-rights:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: ./.github/actions/assert-authorized@main

  # Check if the comment contains "/gha run" at all.
  # If not, don't even bother with parse-params job.
  parse-params:
    runs-on: ubuntu-latest
    needs:
      - check-rights
    outputs:
      runTests: ${{ steps.parse.outputs.runTests }}
      pipelineList: ${{ steps.parse.outputs.pipelineList }}
      profileList: ${{ steps.parse.outputs.profileList }}
      agent: ${{ steps.parse.outputs.agent }}
      architecture: ${{ steps.parse.outputs.architecture }}
      strimzi_feature_gates: ${{ steps.parse.outputs.strimzi_feature_gates }}
      strimzi_rbac_scope: ${{ steps.parse.outputs.strimzi_rbac_scope }}
      cluster_operator_install_type: ${{ steps.parse.outputs.cluster_operator_install_type }}
      parallel: ${{ steps.parse.outputs.parallel }}
      kafkaVersion: ${{ steps.parse.outputs.kafkaVersion }}
      releaseVersion: ${{ steps.parse.outputs.releaseVersion }}
      shouldRun: ${{ steps.parse.outputs.shouldRun }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Parse Comment
        id: parse
        uses: ./.github/actions/parse-comment
        with:
          releaseVersion: ${{ github.event.inputs.releaseVersion }}
          kafkaVersion: ${{ github.event.inputs.kafkaVersion }}
          profile: ${{ github.event.inputs.profile }}

  build-artifacts:
    name: build-artifacts
    needs:
      - parse-params
    if: needs.parse-params.outputs.shouldRun == 'true' && needs.parse-params.outputs.releaseVersion == 'latest'
    runs-on: ubuntu-latest
    steps:
      - name: "Dummy step"
        run: |
          echo "Got following data"

  build-images:
    name: build-images
    needs:
      - parse-params
      - build-artifacts
    if: needs.parse-params.outputs.shouldRun == 'true' && needs.parse-params.outputs.releaseVersion == 'latest' && needs.build-artifacts.result != 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: "Dummy step"
        run: |
          echo "Got following data"

  print-data:
    name: print
    needs:
      - parse-params
      - build-images
    if: ${{ always() && needs.parse-params.outputs.shouldRun == 'true' && needs.build-images.result != 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Print data"
        run: |
          echo "Got following data"
          echo "pipelineList: $pipelineList"
          echo "profileList: $profileList"
          echo "agent: $agent"
          echo "architecture: $architecture"
          echo "strimzi_feature_gates: $strimzi_feature_gates"
          echo "strimzi_rbac_scope: $strimzi_rbac_scope"
          echo "cluster_operator_install_type: $cluster_operator_install_type"
          echo "parallel: $parallel"
          echo "releaseVersion: $releaseVersion"
          echo "kafkaVersion: $kafkaVersion"
          
          echo "Results:"
          echo "${{ needs.build-images.result }}"
          echo "${{ needs.should-run.outputs.ok }}"

        env:
          pipelineList: ${{ needs.parse-params.outputs.pipelineList }}
          profileList: ${{ needs.parse-params.outputs.profileList }}
          agent: ${{ needs.parse-params.outputs.agent }}
          architecture: ${{ needs.parse-params.outputs.architecture }}
          strimzi_feature_gates: ${{ needs.parse-params.outputs.strimzi_feature_gates }}
          strimzi_rbac_scope: ${{ needs.parse-params.outputs.strimzi_rbac_scope }}
          cluster_operator_install_type: ${{ needs.parse-params.outputs.cluster_operator_install_type }}
          parallel: ${{ needs.parse-params.outputs.parallel }}
          releaseVersion: ${{ needs.parse-params.outputs.releaseVersion }}
          kafkaVersion: ${{ needs.parse-params.outputs.kafkaVersion }}

  report:
    if: ${{ always() }}
    needs:
      - print
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Comment + status
        uses: ./.github/actions/comment-and-status
        with:
          message: |
            :tada: Build finished!  (triggered by ${{ github.event_name }})
          state: success
          context: "our-e2e-workflow"
          description: "Double check"
